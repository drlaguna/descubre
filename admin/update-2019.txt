ALTER TABLE  `USER_2` ADD `AGREED` INT(4) NOT NULL AFTER  `ACTIVE`
UPDATE USER_2 SET AGREED = 0;

ALTER TABLE  `USER_2` ADD `LASTLOGIN` date DEFAULT NULL AFTER  `AGREED`


select ID,NAME,SIGNUPDATE, BIRTHYEAR, GENDER, CENTRE, ROLE, ACTIVE, LASTLOGIN from USER_2 where AGREED=1;

# CUANTOS USAN DESCUBRE EN UN PERIODO DE TIEMPO
select count(distinct(USER)) from EVENT_2 WHERE MOMENT >= "2013-09-01" AND MOMENT <= "2014-10-31" AND WHAT="login";

# CUANTOS USAN DESCUBRE EN DOS PERIODOS DE TIEMPO
select count(distinct(USER)) from EVENT_2 WHERE WHAT="login" AND (MOMENT >= "2014-09-01" AND MOMENT <= "2015-10-31") OR (MOMENT >= "2016-09-01" AND MOMENT <= "2017-10-31");


# CUÁNTOS USAN DESCUBRE DURANTE MÁS DE UN AÑO
select USER, MAX(MOMENT), MIN(MOMENT), COUNT(*), DATEDIFF(MAX(MOMENT),MIN(MOMENT)) AS PERIOD from EVENT_2 WHERE MOMENT >= "2013-09-01" AND MOMENT <= "2019-10-31" AND WHAT="login" GROUP BY USER ORDER BY PERIOD DESC LIMIT 250;

# QUIÉN LO USA Y CUÁNTAS VECES
select U.NAME, U.CENTRE, U.ROLE, MAX(E.MOMENT), MIN(E.MOMENT), COUNT(*) AS N, DATEDIFF(MAX(E.MOMENT),MIN(E.MOMENT)) AS PERIOD FROM EVENT_2 AS E, USER_2 AS U WHERE E.USER = U.ID AND WHAT="login" GROUP BY USER ORDER BY N;

# ALTAS POR AÑO ACADEMICO
SELECT COUNT(*) FROM USER_2 WHERE SIGNUPDATE >= "2013-09-01" AND SIGNUPDATE <= "2014-10-31";

# ACTIVOS DESDE QUE SE DIERON DE ALTA POR CURSO ACADEMICO
select count(distinct(E.USER)) from EVENT_2 AS E, USER_2 AS U WHERE E.USER = U.ID AND SIGNUPDATE >= "2014-09-01" AND SIGNUPDATE <= "2015-10-31" AND MOMENT >= "2014-09-01" AND MOMENT <= "2015-10-31" AND WHAT="login";

CREATE TABLE IF NOT EXISTS `KEY_POINTS_2` (
  `USER` int(11) NOT NULL,
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

ID                          `int(11)      `NO     `PRI   `NULL      `auto_increment |
  `CREATE_FUNCTION`,
  `CREATE_OBJECTS`,
  `DEFINE_CLASSES`,
  `DEFINE_METHODS`,
  `HAS_ARITHMETIC`,
  `HAS_ASSIGMENT`,
  `HAS_BOOLEAN_EXPRESSION`,
  `HAS_CONSTANT`,
  `HAS_DECLARATION`,
  `HAS_DO_WHILE`,
  `HAS_ELSE`,
  `HAS_FOR`,
  `HAS_IF`,
  `HAS_RECURSIVE_FUNCTION`,
  `HAS_SWITCH`,
  `HAS_WHILE`,
  `RETURN_ARRAY`,
  `USE_ARRAY`,
  `USE_ARRAY_AS_PARAMETER`,
  `USE_FUNCTION`,
  `USE_LITERAL`


ALTER TABLE TESTCASE_2 MODIFY INPUT varchar(4096);